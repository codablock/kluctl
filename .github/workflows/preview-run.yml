name: preview-comment

on:
  workflow_run:
    workflows:
      - preview-build
    types:
      - completed

permissions:
  contents: read
  pull-requests: write

jobs:
  preview-run:
    runs-on: ubuntu-latest
    steps:
      # IPFS
      - name: Install ipfs
        run: |
          wget -q https://dist.ipfs.tech/kubo/v0.20.0/kubo_v0.20.0_linux-amd64.tar.gz
          tar -xvzf kubo_v0.20.0_linux-amd64.tar.gz
          ./kubo/install.sh
      - name: Setup ipfs
        run: |
          ipfs init
          ipfs config --json Experimental.Libp2pStreamMounting true
          ipfs daemon &
          sleep 5
          echo "IPFS_ID=$(ipfs id -f "<id>")" >> $GITHUB_ENV
      - name: Setup ssh
        run: |
          mkdir -p ~/.ssh
          echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCtWJls6XlpszR5zMjiK7cdUnSBI/p7tWaEHykJZrlwHRepNIckPk4ftOsOfiLb+2K/TntPGa0NMWM0uccRNXJ1/hgT5uiA8MpR8d1SGV5QtVwzJkDTXN8iwcTu1zcIUoL2FvQUm/P4hHI4BdcS9GyokOnqh296RRtajnzWZlGtBHRMPt9S7eil9kl5sOuHQIsZHjYkqLb7PSyVWeeMzEEeI28L2ZDrfBBgBNiE4ibVBlRbUeArRO5coV2Vn9uafzOIXT13apo0bhacv5FEmmsEcDGelZWKVInoUQHDnsr7UQPDHS2OsdtZRCluvRYH5ZC4SvrDeuZe4AKjc8iDeNuZLlzn7cgwGZDNHJ1PwAWwEz4/yF0vshA7mfrXLhjJ4+vN4enlQqDYqvudJ3x4uKO67panc+Gmaq76mxh81bJHNnlothEs9K9WfGcXAlBBjuk/0kmIf6I1ICA/dxCKa0sAMbolZHoBuoVUszQdlVrDkwPmzNCenBX/MPDJl08FJFc= ablock@Alexanders-MacBook-Pro.local >> ~/.ssh/authorized_keys
          sudo systemctl enable ssh
          sudo systemctl start ssh
          ipfs p2p listen /x/ssh /ip4/127.0.0.1/tcp/22
      # SETUP KIND
      - name: Setup Kind cluster
        run: |
          cat <<EOF > kind-config.yaml
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          networking:
            apiServerAddress: "127.0.0.1"
            apiServerPort: 6443
          nodes:
            - role: control-plane
              kubeadmConfigPatches:
                - |
                  kind: InitConfiguration
                  nodeRegistration:
                    kubeletExtraArgs:
                      node-labels: "ingress-ready=true"
              extraPortMappings:
                - containerPort: 80
                  hostPort: 80
                  protocol: TCP
                - containerPort: 443
                  hostPort: 443
                  protocol: TCP
          EOF
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          kind create cluster --config kind-config.yaml
      - name: Kind info
        run: |
          kubectl cluster-info
      # COMMENT
      - name: Build comment text
        run: |
          cat <<EOF > comment.md
          # ðŸ¤– Preview Environment is starting up and will be reachable soon.
          ipfs-id: `$IPFS_ID`
          
          # ipfs forward commands
          http: `ipfs p2p forward /x/kluctl-webui /ip4/127.0.0.1/tcp/9090 /p2p/$IPFS_ID`
          ssh: `ipfs p2p forward /x/ssh /ip4/127.0.0.1/tcp/9090 /p2p/$IPFS_ID`
          k8s: `ipfs p2p forward /x/k /ip4/127.0.0.1/tcp/9090 /p2p/$IPFS_ID`
      - uses: mshick/add-pr-comment@v2
        with:
          message-id: preview-run-info
          message-path: |
            comment.md
      # LOAD IMAGE
      - name: Download image
        uses: actions/github-script@v6
        with:
          script: |
            let matchArtifact = undefined
            console.log("do listWorkflowRunArtifacts")
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            matchArtifact = allArtifacts.data.artifacts.find((artifact) => {
              return artifact.name == "kluctl-preview-image"
            });
            if (matchArtifact) {
              console.log("found artifact " + matchArtifact.id)
              break
            }
            console.log("artifact not found, retrying")
            await new Promise(r => setTimeout(r, 5000));
          
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/kluctl-preview-image.zip`, Buffer.from(download.data));
      - name: Load image to Kind
        run: |
          unzip kluctl-preview-image.zip
          kind load image-archive kluctl-preview-image.tar
      # INSTALL
      - name: Install Kluctl Controller
        run: |
          cd install/controller
          ../../bin/kluctl deploy --yes -a kluctl_image=kluctl -a kluctl_version=preview
      - name: Install Kluctl Webui
        run: |
          cd install/webui
          ../../bin/kluctl deploy --yes -a kluctl_image=kluctl -a kluctl_version=preview
      - name: Run kubectl port-forward
        run: |
          kubectl -n kluctl-system port-forward svc/kluctl-webui 9090:8080 &
      - name: Listen ipfs/p2p
        run: |
          ipfs p2p listen /x/k /ip4/127.0.0.1/tcp/6443
          ipfs p2p listen /x/kluctl-webui /ip4/127.0.0.1/tcp/9090
      - name: Sleep
        run: |
          sleep 1800
